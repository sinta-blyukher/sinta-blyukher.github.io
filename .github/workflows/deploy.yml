# name: ワークフローの名前（GitHub のActionsタブで表示される）
name: Deploy to GitHub Pages

# on: ワークフローのトリガーを定義
# push: コードがプッシュされたときに実行
# branches: ["main"]: mainブランチへのプッシュのみを対象
on:
  push:
    branches: ["main"]

# Job1:build(ビルドジョブ)
jobs:
  build:
    # GitHub が提供する仮想環境（Ubuntu Linux）を使用 
    # 他の選択肢：windows-latest, macos-latest
    runs-on: ubuntu-latest
    steps:
      # 公式アクションを使用してリポジトリのコードを仮想環境にダウンロード 
      # @v4は使用するアクションのバージョン
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          # Node.js version 20をインストール
          # Astroは Node.js 18+ が必要なので、最新の安定版を使用
          node-version: "20"
      #  依存関係のインストール
      - run: npm ci
      #  Astroサイトのビルド
        # package.jsonのscriptsセクションで定義されたbuildコマンドを実行
        # Astroの場合、通常はastro buildが実行される
      - run: npm run build
      # ビルドで生成された./distフォルダをアーティファクトとして保存
      # 次のジョブ（deploy）で使用するために一時保存
      - uses: actions/upload-pages-artifact@v3
        with:
          path: ./dist

  # Job2:deploy(デプロイジョブ)
  deploy:
    # このジョブはbuildジョブが成功した後に実行される
    needs: build
    runs-on: ubuntu-latest
    steps:
      # GitHub Pages専用の公式デプロイアクション
      # 前のジョブでアップロードされたアーティファクトを自動で取得し、GitHub Pagesにデプロイ
      - uses: actions/deploy-pages@v4